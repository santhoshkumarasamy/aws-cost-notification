AWSTemplateFormatVersion: 2010-09-09
Description: Template for creating a SNS notification for cost management
Parameters:
  snsEmail:
    Description: Email for the notification
    Type: String
    Default: santhoshkumarkumarasamy850@gmail.com
Resources:
  SNSNotification:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Cost Notification
      Tags:
      - Key: project
        value: cost management
      TopicName: Cost_Notification
  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref snsEmail
      Protocol: email
      TopicArn: !Ref SNSNotification
  SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SNSNotification
      PolicyDocument:
        Statement:
          - Sid: Allow Lambda to publish message
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sns:Publish'
            Resource: !Ref SNSNotification
  lambdaRole:
    Type : AWS::IAM::Role
    Properties:
      RoleName: pro3-cost-notification
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role for the lamda function to access the sns topic
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSCostAndUsageReportAutomationPolicy
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: "cost_explorer_access"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ce:GetCostAndUsage"
                  - "ce:GetCostForecast"
                  - "ce:GetDimensionValues"
                  - "ce:GetUsageForecast"
                Resource: "*"
  lambdaCloudwatchlogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: cost-notitfication-lambda-log
      RetentionInDays: 3
      Tags:
        - Key: project
          value: cost_management
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Cost_Notification
      Handler: function.lambda_handler
      PackageType: Zip
      Role: !GetAtt lambdaRole.Arn
      Runtime: python3.13
      Architectures:
        - x86_64
      Code:
        S3Bucket: sns-function-files
        S3Key: function.zip
      Environment:
        Variables:
          SNS_TOPIC: !Ref SNSNotification
      LoggingConfig:
        LogGroup: !Ref lambdaCloudwatchlogs
  ScheduleEventRule:
    Type: AWS::Events::Rule
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: "cron(0 0 1 * ? *)"
      State: "ENABLED"
      Targets: 
        - Arn: 
            Fn::GetAtt: 
              - "lambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref "lambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduleEventRule"
          - "Arn"
